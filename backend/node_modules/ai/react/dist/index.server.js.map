{"version":3,"sources":["../index.server.ts","../tokens.tsx"],"sourcesContent":["export * from './tokens';\n","import { Suspense } from 'react';\n\ntype Props = {\n  /**\n   * A ReadableStream produced by the AI SDK.\n   */\n  stream: ReadableStream;\n};\n\n/**\nA React Server Component that recursively renders a stream of tokens.\nCan only be used inside of server components.\n\n@deprecated Use RSCs / Generative AI instead.\n */\nexport async function Tokens(props: Props) {\n  const { stream } = props;\n  const reader = stream.getReader();\n\n  return (\n    <Suspense>\n      {/* @ts-expect-error React Server Components */}\n      <RecursiveTokens reader={reader} />\n    </Suspense>\n  );\n}\n\ntype InternalProps = {\n  reader: ReadableStreamDefaultReader;\n};\n\nasync function RecursiveTokens({ reader }: InternalProps) {\n  const { done, value } = await reader.read();\n\n  if (done) {\n    return null;\n  }\n\n  const text = new TextDecoder().decode(value);\n\n  return (\n    <>\n      {text}\n      <Suspense fallback={null}>\n        {/* @ts-expect-error React Server Components */}\n        <RecursiveTokens reader={reader} />\n      </Suspense>\n    </>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,mBAAyB;AAsBnB;AAPN,eAAsB,OAAO,OAAc;AACzC,QAAM,EAAE,OAAO,IAAI;AACnB,QAAM,SAAS,OAAO,UAAU;AAEhC,SACE,4CAAC,yBAEC,sDAAC,mBAAgB,QAAgB,GACnC;AAEJ;AAMA,eAAe,gBAAgB,EAAE,OAAO,GAAkB;AACxD,QAAM,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,KAAK;AAE1C,MAAI,MAAM;AACR,WAAO;AAAA,EACT;AAEA,QAAM,OAAO,IAAI,YAAY,EAAE,OAAO,KAAK;AAE3C,SACE,4EACG;AAAA;AAAA,IACD,4CAAC,yBAAS,UAAU,MAElB,sDAAC,mBAAgB,QAAgB,GACnC;AAAA,KACF;AAEJ;","names":[]}